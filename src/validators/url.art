;===============================================
; Validator.art
;
; String validation library
; for Arturo
;
; MIT License
; (c) 2024 Yanis Zafirópulos
;==========================================================
; URL validation
;
; @file: src/validators/url.art
;==========================================================

define :urlValidator is :validator [

    ;------------------
    ; built-in data
    ;------------------

    isUrl: {/^(https?:\/\/)(localhost(?::(?:[1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))?|((?!-)(?!.*--)[a-zA-Z\-0-9]{1,63}(?<!-)\.)+([a-zA-Z]{2,63})|(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(?::(?:[1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5]))?)(\/[^\s]*)?$/}

    ;------------------
    ; helpers
    ;------------------

    ; Extract TLD from URL
    getTld: function [url][
        if or? match? url {/^https?:\/\/localhost/} 
               match? url {/^https?:\/\/\d+\.\d+\.\d+\.\d+/} [
            return null
        ]

        parts: split.by:"/" url
        domain: parts\2
        if not? null? domain [
            domainParts: split.by:"." domain
            if (size domainParts) >= 2 [
                ; Try multi-part TLD first
                if (size domainParts) >= 3 [
                    possibleTld: join.with:"." @[domainParts\[(size domainParts)-2] domainParts\[(size domainParts)-1]]
                    if valid?.tld possibleTld ->
                        return possibleTld
                ]
                ; Try single-part TLD
                return last domainParts
            ]
        ]
        return null
    ]

    ;------------------
    ; methods
    ;------------------

    action: method [str, opts][
        ; First check basic URL format
        if not? match? str \isUrl [
            return false
        ]

        ; Then validate TLD (if it's not localhost or IP)
        tld: \getTld str
        if not? null? tld [
            unless valid?.tld tld ->
                return false
        ]

        return true
    ]

    test: method [][
        #[
            valid: [
                ; Basic domain examples
                "https://arturo-lang.io"
                "https://www.example.com/"
                "http://www.example.com/"
                "https://example.com/"
                "http://example.com/"
                "http://foo.com/blah_blah"
                "http://foo.com/blah_blah/"
                "http://j.mp"
                
                ; Query parameters and fragments
                "http://www.example.com/wpstyle/?p=364"
                "https://www.example.com/foo/?bar=baz&inga=42&quux"
                "http://foo.com/blah_(wikipedia)#cite-1"
                "http://example.com/example?example=example"
                
                ; Complex paths
                "http://foo.com/blah_blah_(wikipedia)"
                "http://foo.com/blah_blah_(wikipedia)_(again)"
                "http://foo.com/(something)?after=parens"
                "https://example.com/example/example/example"
                "https://unpkg.com/example@1.0.0/example/example-example.html"
                
                ; Multiple subdomains
                "https://sub1.sub2.example.com"
                "http://example.example.com/example/#&example=example"
                
                ; Special TLDs
                "https://example.co.uk"
                "https://example.app"
                "https://example.dev/path?query=value#fragment"
                
                ; Localhost variants
                "http://localhost"
                "http://localhost:8080"
                "http://localhost:1"
                "http://localhost:65535"  ; Maximum valid port
                
                ; IP address variants
                "http://127.0.0.1"
                "http://127.0.0.1:3000"
                "https://127.0.0.1:3000"
                "http://192.168.1.1"
                "http://10.0.0.0"
                "http://0.0.0.0:4000"
                "http://8.8.8.8:65535"    ; Maximum valid port
                "http://255.255.255.255"  ; Maximum valid IP

                ; Basic URLs with common TLDs
                "https://arturo-lang.io"
                "https://www.example.com/"
                "http://example.net"
                "https://my-site.org"
                
                ; URLs with modern TLDs
                "https://my-app.dev"
                "https://cool-project.xyz"
                "https://my-store.shop"
                "https://new-blog.blog"
                
                ; Country code TLDs
                "https://website.uk"
                "https://company.de"
                "https://shop.jp"
                
                ; Multi-level TLDs
                "https://example.co.uk"
                "https://website.com.au"
                "https://shop.co.jp"
                
                ; Localhost and IPs (bypass TLD check)
                "http://localhost"
                "http://localhost:8080"
                "http://127.0.0.1"
                "http://127.0.0.1:3000"
                "http://192.168.1.1:8080"
            ]

            invalid: [
                ; Basic format errors
                "drkameleon@gmail.com"
                "arturolangio"
                "https:// arturo-lang.io"
                "http://"
                "http://."
                "http://.."
                "http://../"
                "foo.com"
                
                ; Protocol errors
                "ftp://example.com"
                "https:/example.com"
                "https//example.com"
                "https:://example.com"
                "h://test"
                ":// should fail"
                "rdar://1234"
                
                ; Domain format errors
                "http://example..com"
                "http://example.com../"
                "http://.example.com"
                "http://example."
                "http://-error-.invalid/"
                "http://a.b--c.de/"
                "http://-a.b.co"
                "http://a.b-.co"
                "http://.www.foo.bar/"
                "http://www.foo.bar./"
                
                ; Invalid characters
                "https://exa mple.com"
                "https://££example.com"
                "https://example.com/path with spaces"
                
                ; Authentication (currently not supported)
                "http://userid:password@example.com:8080"
                "http://userid@example.com"
                "http://userid:password@example.com"
                
                ; Port number errors
                "http://localhost:0"           ; Invalid port 0
                "http://localhost:65536"       ; Port too high
                "http://127.0.0.1:65536"       ; Port too high
                "http://localhost:-80"         ; Negative port
                "http://localhost:abc"         ; Non-numeric port
                "https://127.0.0.1:"           ; Port missing number
                
                ; IP address errors
                "http://256.256.256.256"       ; Invalid IP octets
                "http://1.2.3.4.5"             ; Too many IP octets
                "http://1.1.1.1.1"             ; Invalid IP format
                "http://123.123.123"           ; Incomplete IP
                "http://3628126748"            ; Not an IP
                
                ; Malformed paths/queries
                "http://?"
                "http://??"
                "http://??/"
                "http://#"
                "http://##"
                "http://##/"
                "http://foo.bar?q=Spaces should be encoded"

                ; Invalid TLDs
                "https://example.invalid"
                "https://website.wrongtld"
                "https://test.notarealtld"
                "http://something.thisisnotavalidtld"
                
                ; Malformed TLDs
                "https://example."
                "https://website.c"
                "https://test.12"
                
                ; Invalid co.* combinations
                "https://example.co.wrongcountry"
                "https://website.com.invalidcountry"
                
            ]
        ]
    ]
    
]